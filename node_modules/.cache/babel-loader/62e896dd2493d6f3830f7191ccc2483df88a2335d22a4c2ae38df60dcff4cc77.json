{"ast":null,"code":"var _jsxFileName = \"/Users/nikhil/Desktop/Desktop/StreamApp/overlay-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactPlayer from 'react-player';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [overlays, setOverlays] = useState([]);\n  const [url, setUrl] = useState('');\n  const [inputUrl, setInputUrl] = useState('');\n  useEffect(() => {\n    // Fetch overlays from the API\n    axios.get('/api/overlays').then(response => setOverlays(response.data)).catch(error => console.error('Error fetching overlays:', error));\n  }, []);\n  const handleOverlayChange = (overlayId, newData) => {\n    // Update overlay on the backend\n    axios.put(`/api/overlays/${overlayId}`, newData).then(response => console.log(response.data)).catch(error => console.error('Error updating overlay:', error));\n  };\n  const handleUrlChange = () => {\n    // Set the RTSP URL when the user clicks the \"Set URL\" button\n    setUrl(inputUrl);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Live Stream App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter RTSP URL\",\n        value: inputUrl,\n        onChange: e => setInputUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUrlChange,\n        children: \"Set URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n      url: url,\n      playing: false,\n      controls: true,\n      width: \"100%\",\n      height: \"auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), overlays.map(overlay => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: `${overlay.position.x}%`,\n        top: `${overlay.position.y}%`,\n        width: `${overlay.size.width}%`,\n        height: `${overlay.size.height}%`,\n        color: 'white',\n        zIndex: 1\n      },\n      children: overlay.content\n    }, overlay._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Oy/X27iILGN7kpLrhH9fjaZeGXk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReactPlayer","axios","jsxDEV","_jsxDEV","App","_s","overlays","setOverlays","url","setUrl","inputUrl","setInputUrl","get","then","response","data","catch","error","console","handleOverlayChange","overlayId","newData","put","log","handleUrlChange","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","playing","controls","width","height","map","overlay","style","position","left","x","top","y","size","color","zIndex","content","_id","_c","$RefreshReg$"],"sources":["/Users/nikhil/Desktop/Desktop/StreamApp/overlay-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactPlayer from 'react-player';\nimport axios from 'axios';\n\nfunction App() {\n  const [overlays, setOverlays] = useState([]);\n  const [url, setUrl] = useState('');\n  const [inputUrl, setInputUrl] = useState('');\n\n  useEffect(() => {\n    // Fetch overlays from the API\n    axios.get('/api/overlays')\n      .then(response => setOverlays(response.data))\n      .catch(error => console.error('Error fetching overlays:', error));\n  }, []);\n\n  const handleOverlayChange = (overlayId, newData) => {\n    // Update overlay on the backend\n    axios.put(`/api/overlays/${overlayId}`, newData)\n      .then(response => console.log(response.data))\n      .catch(error => console.error('Error updating overlay:', error));\n  };\n\n  const handleUrlChange = () => {\n    // Set the RTSP URL when the user clicks the \"Set URL\" button\n    setUrl(inputUrl);\n  };\n\n  return (\n    <div>\n      <h1>Live Stream App</h1>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter RTSP URL\"\n          value={inputUrl}\n          onChange={(e) => setInputUrl(e.target.value)}\n        />\n        <button onClick={handleUrlChange}>Set URL</button>\n      </div>\n      <ReactPlayer\n        url={url}\n        playing={false}\n        controls={true}\n        width=\"100%\"\n        height=\"auto\"\n      />\n      {overlays.map(overlay => (\n        <div\n          key={overlay._id}\n          style={{\n            position: 'absolute',\n            left: `${overlay.position.x}%`,\n            top: `${overlay.position.y}%`,\n            width: `${overlay.size.width}%`,\n            height: `${overlay.size.height}%`,\n            color: 'white',\n            zIndex: 1,\n          }}\n        >\n          {overlay.content}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}