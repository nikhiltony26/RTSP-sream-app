{"ast":null,"code":"var _jsxFileName = \"/Users/nikhil/Desktop/Desktop/StreamApp/overlay-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactPlayer from 'react-player';\nimport axios from 'axios';\nimport './App.css'; // Import a CSS file for styling (you can create your own)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [overlays, setOverlays] = useState([]);\n  const [url, setUrl] = useState('');\n  const [videoSize, setVideoSize] = useState({\n    width: '100%',\n    height: 'auto'\n  });\n  useEffect(() => {\n    // Fetch overlays from the API\n    axios.get('/api/overlays').then(response => setOverlays(response.data)).catch(error => console.error('Error fetching overlays:', error));\n  }, []);\n  const handleOverlayChange = (overlayId, newData) => {\n    // Update overlay on the backend\n    axios.put(`/api/overlays/${overlayId}`, newData).then(response => console.log(response.data)).catch(error => console.error('Error updating overlay:', error));\n  };\n  const handleUrlChange = newUrl => {\n    setUrl(newUrl);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-heading\",\n      children: \"Live Stream App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      style: videoSize,\n      children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n        url: url,\n        playing: false,\n        controls: true,\n        width: \"100%\",\n        height: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), overlays.map(overlay => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        style: {\n          position: 'absolute',\n          left: `${overlay.position.x}%`,\n          top: `${overlay.position.y}%`,\n          width: `${overlay.size.width}%`,\n          height: `${overlay.size.height}%`,\n          zIndex: 1\n        },\n        children: overlay.content\n      }, overlay._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"url-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"rtspUrl\",\n        children: \"RTSP URL:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"rtspUrl\",\n        value: url,\n        onChange: e => handleUrlChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"R3FOuIZof7gkn73WxR3t3tzr71o=\");\n_c = App;\nconst API_BASE_URL = 'http://localhost:5000/api'; // Update with your Flask server URL\n\naxios.post(`${API_BASE_URL}/overlays`, data);\naxios.get(`${API_BASE_URL}/overlays`);\naxios.put(`${API_BASE_URL}/overlays/${overlayId}`, newData);\naxios.delete(`${API_BASE_URL}/overlays/${overlayId}`);\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReactPlayer","axios","jsxDEV","_jsxDEV","App","_s","overlays","setOverlays","url","setUrl","videoSize","setVideoSize","width","height","get","then","response","data","catch","error","console","handleOverlayChange","overlayId","newData","put","log","handleUrlChange","newUrl","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","playing","controls","map","overlay","position","left","x","top","y","size","zIndex","content","_id","htmlFor","type","id","value","onChange","e","target","_c","API_BASE_URL","post","delete","$RefreshReg$"],"sources":["/Users/nikhil/Desktop/Desktop/StreamApp/overlay-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactPlayer from 'react-player';\nimport axios from 'axios';\n\nimport './App.css'; // Import a CSS file for styling (you can create your own)\n\nfunction App() {\n  const [overlays, setOverlays] = useState([]);\n  const [url, setUrl] = useState('');\n  const [videoSize, setVideoSize] = useState({ width: '100%', height: 'auto' });\n\n  useEffect(() => {\n    // Fetch overlays from the API\n    axios.get('/api/overlays')\n      .then(response => setOverlays(response.data))\n      .catch(error => console.error('Error fetching overlays:', error));\n  }, []);\n\n  const handleOverlayChange = (overlayId, newData) => {\n    // Update overlay on the backend\n    axios.put(`/api/overlays/${overlayId}`, newData)\n      .then(response => console.log(response.data))\n      .catch(error => console.error('Error updating overlay:', error));\n  };\n\n  const handleUrlChange = (newUrl) => {\n    setUrl(newUrl);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1 className=\"main-heading\">Live Stream App</h1>\n      <div className=\"video-container\" style={videoSize}>\n        <ReactPlayer\n          url={url}\n          playing={false}\n          controls={true}\n          width=\"100%\"\n          height=\"100%\"\n        />\n        {overlays.map(overlay => (\n          <div\n            key={overlay._id}\n            className=\"overlay\"\n            style={{\n              position: 'absolute',\n              left: `${overlay.position.x}%`,\n              top: `${overlay.position.y}%`,\n              width: `${overlay.size.width}%`,\n              height: `${overlay.size.height}%`,\n              zIndex: 1,\n            }}\n          >\n            {overlay.content}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"url-input-container\">\n        <label htmlFor=\"rtspUrl\">RTSP URL:</label>\n        <input\n          type=\"text\"\n          id=\"rtspUrl\"\n          value={url}\n          onChange={(e) => handleUrlChange(e.target.value)}\n        />\n      </div>\n    </div>\n  );\n}\nconst API_BASE_URL = 'http://localhost:5000/api';  // Update with your Flask server URL\n\n\naxios.post(`${API_BASE_URL}/overlays`, data)\naxios.get(`${API_BASE_URL}/overlays`)\naxios.put(`${API_BASE_URL}/overlays/${overlayId}`, newData)\naxios.delete(`${API_BASE_URL}/overlays/${overlayId}`)\n\nexport default App;\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}